{"version":3,"file":"e4fc8cc3.js","sources":["../../../node_modules/@shopify/hydrogen/dist/esnext/components/CartProvider/constants.js","../../../node_modules/@shopify/hydrogen/dist/esnext/components/CartProvider/CartProvider.client.js"],"sourcesContent":["export const CART_ID_STORAGE_KEY = 'shopifyCartId';\nexport const CART_COOKIE_TTL_DAYS = 14;\n","import React, { useEffect, useCallback, useReducer, useMemo, useRef, } from 'react';\nimport { flattenConnection } from '../../utilities';\nimport { CartLineAdd, CartCreate, CartLineRemove, CartLineUpdate, CartNoteUpdate, CartBuyerIdentityUpdate, CartAttributesUpdate, CartDiscountCodesUpdate, CartQuery, } from './cart-queries';\nimport { useCartFetch } from './hooks.client';\nimport { CartContext } from './context';\nimport { CART_ID_STORAGE_KEY } from './constants';\nimport { useServerProps } from '../../foundation/useServerProps';\nimport { ClientAnalytics } from '../../foundation/Analytics';\nfunction cartReducer(state, action) {\n    switch (action.type) {\n        case 'cartFetch': {\n            if (state.status === 'uninitialized') {\n                return {\n                    status: 'fetching',\n                };\n            }\n            break;\n        }\n        case 'cartCreate': {\n            if (state.status === 'uninitialized') {\n                return {\n                    status: 'creating',\n                };\n            }\n            break;\n        }\n        case 'resolve': {\n            const resolvableStatuses = ['updating', 'fetching', 'creating'];\n            if (resolvableStatuses.includes(state.status)) {\n                return {\n                    status: 'idle',\n                    cart: action.cart,\n                };\n            }\n            break;\n        }\n        case 'reject': {\n            if (state.status === 'fetching' || state.status === 'creating') {\n                return { status: 'uninitialized', error: action.error };\n            }\n            else if (state.status === 'updating') {\n                return {\n                    status: 'idle',\n                    cart: state.lastValidCart,\n                    error: action.error,\n                };\n            }\n            break;\n        }\n        case 'resetCart': {\n            if (state.status === 'fetching') {\n                return { status: 'uninitialized' };\n            }\n            break;\n        }\n        case 'addLineItem': {\n            if (state.status === 'idle') {\n                return {\n                    status: 'updating',\n                    cart: state.cart,\n                    lastValidCart: state.cart,\n                };\n            }\n            break;\n        }\n        case 'removeLineItem': {\n            if (state.status === 'idle') {\n                return {\n                    status: 'updating',\n                    cart: {\n                        ...state.cart,\n                        lines: state.cart.lines.filter(({ id }) => !action.lines.includes(id)),\n                    },\n                    lastValidCart: state.cart,\n                };\n            }\n            break;\n        }\n        case 'updateLineItem': {\n            if (state.status === 'idle') {\n                return {\n                    status: 'updating',\n                    cart: {\n                        ...state.cart,\n                        lines: state.cart.lines.map((line) => {\n                            const updatedLine = action.lines.find(({ id }) => id === line.id);\n                            if (updatedLine && updatedLine.quantity) {\n                                return {\n                                    ...line,\n                                    quantity: updatedLine.quantity,\n                                };\n                            }\n                            return line;\n                        }),\n                    },\n                    lastValidCart: state.cart,\n                };\n            }\n            break;\n        }\n        case 'noteUpdate': {\n            if (state.status === 'idle') {\n                return {\n                    status: 'updating',\n                    cart: state.cart,\n                    lastValidCart: state.cart,\n                };\n            }\n            break;\n        }\n        case 'buyerIdentityUpdate': {\n            if (state.status === 'idle') {\n                return {\n                    status: 'updating',\n                    cart: state.cart,\n                    lastValidCart: state.cart,\n                };\n            }\n            break;\n        }\n        case 'cartAttributesUpdate': {\n            if (state.status === 'idle') {\n                return {\n                    status: 'updating',\n                    cart: state.cart,\n                    lastValidCart: state.cart,\n                };\n            }\n            break;\n        }\n        case 'discountCodesUpdate': {\n            if (state.status === 'idle') {\n                return {\n                    status: 'updating',\n                    cart: state.cart,\n                    lastValidCart: state.cart,\n                };\n            }\n            break;\n        }\n    }\n    throw new Error(`Cannot dispatch event (${action.type}) for current cart state (${state.status})`);\n}\n/**\n * The `CartProvider` component creates a context for using a cart. It creates a cart object and callbacks\n * that can be accessed by any descendent component using the `useCart` hook and related hooks. It also carries out\n * any callback props when a relevant action is performed. For example, if a `onLineAdd` callback is provided,\n * then the callback will be called when a new line item is successfully added to the cart.\n *\n * The `CartProvider` component must be a descendent of the `ShopifyProvider` component.\n * You must use this component if you want to use the `useCart` hook or related hooks, or if you would like to use the `AddToCartButton` component.\n */\nexport function CartProvider({ children, numCartLines, onCreate, onLineAdd, onLineRemove, onLineUpdate, onNoteUpdate, onBuyerIdentityUpdate, onAttributesUpdate, onDiscountCodesUpdate, data: cart, }) {\n    var _a;\n    const { serverProps } = useServerProps();\n    const countryCode = (_a = serverProps === null || serverProps === void 0 ? void 0 : serverProps.country) === null || _a === void 0 ? void 0 : _a.isoCode;\n    const initialStatus = cart\n        ? { status: 'idle', cart: cartFromGraphQL(cart) }\n        : { status: 'uninitialized' };\n    const [state, dispatch] = useReducer((state, dispatch) => cartReducer(state, dispatch), initialStatus);\n    const fetchCart = useCartFetch();\n    const cartFetch = useCallback(async (cartId) => {\n        dispatch({ type: 'cartFetch' });\n        const { data } = await fetchCart({\n            query: CartQuery,\n            variables: {\n                id: cartId,\n                numCartLines,\n                country: countryCode,\n            },\n        });\n        if (!(data === null || data === void 0 ? void 0 : data.cart)) {\n            window.localStorage.removeItem(CART_ID_STORAGE_KEY);\n            dispatch({ type: 'resetCart' });\n            return;\n        }\n        dispatch({ type: 'resolve', cart: cartFromGraphQL(data.cart) });\n    }, [fetchCart, numCartLines, countryCode]);\n    const cartCreate = useCallback(async (cart) => {\n        var _a, _b;\n        dispatch({ type: 'cartCreate' });\n        onCreate === null || onCreate === void 0 ? void 0 : onCreate();\n        if (countryCode && !((_a = cart.buyerIdentity) === null || _a === void 0 ? void 0 : _a.countryCode)) {\n            if (cart.buyerIdentity == null) {\n                cart.buyerIdentity = {};\n            }\n            cart.buyerIdentity.countryCode = countryCode;\n        }\n        const { data, error } = await fetchCart({\n            query: CartCreate,\n            variables: {\n                input: cart,\n                numCartLines,\n                country: countryCode,\n            },\n        });\n        if (error) {\n            dispatch({\n                type: 'reject',\n                error,\n            });\n        }\n        if ((_b = data === null || data === void 0 ? void 0 : data.cartCreate) === null || _b === void 0 ? void 0 : _b.cart) {\n            if (cart.lines) {\n                ClientAnalytics.publish(ClientAnalytics.eventNames.ADD_TO_CART, true, {\n                    addedCartLines: cart.lines,\n                    cart: data.cartCreate.cart,\n                });\n            }\n            dispatch({\n                type: 'resolve',\n                cart: cartFromGraphQL(data.cartCreate.cart),\n            });\n            window.localStorage.setItem(CART_ID_STORAGE_KEY, data.cartCreate.cart.id);\n        }\n    }, [onCreate, fetchCart, numCartLines, countryCode]);\n    const addLineItem = useCallback(async (lines, state) => {\n        var _a;\n        if (state.status === 'idle') {\n            dispatch({ type: 'addLineItem' });\n            onLineAdd === null || onLineAdd === void 0 ? void 0 : onLineAdd();\n            const { data, error } = await fetchCart({\n                query: CartLineAdd,\n                variables: {\n                    cartId: state.cart.id,\n                    lines,\n                    numCartLines,\n                    country: countryCode,\n                },\n            });\n            if (error) {\n                dispatch({\n                    type: 'reject',\n                    error,\n                });\n            }\n            if ((_a = data === null || data === void 0 ? void 0 : data.cartLinesAdd) === null || _a === void 0 ? void 0 : _a.cart) {\n                ClientAnalytics.publish(ClientAnalytics.eventNames.ADD_TO_CART, true, {\n                    addedCartLines: lines,\n                    cart: data.cartLinesAdd.cart,\n                });\n                dispatch({\n                    type: 'resolve',\n                    cart: cartFromGraphQL(data.cartLinesAdd.cart),\n                });\n            }\n        }\n    }, [fetchCart, numCartLines, onLineAdd, countryCode]);\n    const removeLineItem = useCallback(async (lines, state) => {\n        var _a;\n        if (state.status === 'idle') {\n            dispatch({ type: 'removeLineItem', lines });\n            onLineRemove === null || onLineRemove === void 0 ? void 0 : onLineRemove();\n            const { data, error } = await fetchCart({\n                query: CartLineRemove,\n                variables: {\n                    cartId: state.cart.id,\n                    lines,\n                    numCartLines,\n                    country: countryCode,\n                },\n            });\n            if (error) {\n                dispatch({\n                    type: 'reject',\n                    error,\n                });\n            }\n            if ((_a = data === null || data === void 0 ? void 0 : data.cartLinesRemove) === null || _a === void 0 ? void 0 : _a.cart) {\n                ClientAnalytics.publish(ClientAnalytics.eventNames.REMOVE_FROM_CART, true, {\n                    removedCartLines: lines,\n                    cart: data.cartLinesRemove.cart,\n                });\n                dispatch({\n                    type: 'resolve',\n                    cart: cartFromGraphQL(data.cartLinesRemove.cart),\n                });\n            }\n        }\n    }, [fetchCart, onLineRemove, numCartLines, countryCode]);\n    const updateLineItem = useCallback(async (lines, state) => {\n        var _a;\n        if (state.status === 'idle') {\n            dispatch({ type: 'updateLineItem', lines });\n            onLineUpdate === null || onLineUpdate === void 0 ? void 0 : onLineUpdate();\n            const { data, error } = await fetchCart({\n                query: CartLineUpdate,\n                variables: {\n                    cartId: state.cart.id,\n                    lines,\n                    numCartLines,\n                    country: countryCode,\n                },\n            });\n            if (error) {\n                dispatch({\n                    type: 'reject',\n                    error,\n                });\n            }\n            if ((_a = data === null || data === void 0 ? void 0 : data.cartLinesUpdate) === null || _a === void 0 ? void 0 : _a.cart) {\n                ClientAnalytics.publish(ClientAnalytics.eventNames.UPDATE_CART, true, {\n                    updatedCartLines: lines,\n                    oldCart: state.cart,\n                });\n                dispatch({\n                    type: 'resolve',\n                    cart: cartFromGraphQL(data.cartLinesUpdate.cart),\n                });\n            }\n        }\n    }, [fetchCart, onLineUpdate, numCartLines, countryCode]);\n    const noteUpdate = useCallback(async (note, state) => {\n        var _a;\n        if (state.status === 'idle') {\n            dispatch({ type: 'noteUpdate' });\n            onNoteUpdate === null || onNoteUpdate === void 0 ? void 0 : onNoteUpdate();\n            const { data, error } = await fetchCart({\n                query: CartNoteUpdate,\n                variables: {\n                    cartId: state.cart.id,\n                    note,\n                    numCartLines,\n                    country: countryCode,\n                },\n            });\n            if (error) {\n                dispatch({\n                    type: 'reject',\n                    error,\n                });\n            }\n            if ((_a = data === null || data === void 0 ? void 0 : data.cartNoteUpdate) === null || _a === void 0 ? void 0 : _a.cart) {\n                dispatch({\n                    type: 'resolve',\n                    cart: cartFromGraphQL(data.cartNoteUpdate.cart),\n                });\n            }\n        }\n    }, [fetchCart, onNoteUpdate, numCartLines, countryCode]);\n    const buyerIdentityUpdate = useCallback(async (buyerIdentity, state) => {\n        var _a;\n        if (state.status === 'idle') {\n            dispatch({ type: 'buyerIdentityUpdate' });\n            onBuyerIdentityUpdate === null || onBuyerIdentityUpdate === void 0 ? void 0 : onBuyerIdentityUpdate();\n            const { data, error } = await fetchCart({\n                query: CartBuyerIdentityUpdate,\n                variables: {\n                    cartId: state.cart.id,\n                    buyerIdentity,\n                    numCartLines,\n                    country: countryCode,\n                },\n            });\n            if (error) {\n                dispatch({\n                    type: 'reject',\n                    error,\n                });\n            }\n            if ((_a = data === null || data === void 0 ? void 0 : data.cartBuyerIdentityUpdate) === null || _a === void 0 ? void 0 : _a.cart) {\n                dispatch({\n                    type: 'resolve',\n                    cart: cartFromGraphQL(data.cartBuyerIdentityUpdate.cart),\n                });\n            }\n        }\n    }, [fetchCart, onBuyerIdentityUpdate, numCartLines, countryCode]);\n    const cartAttributesUpdate = useCallback(async (attributes, state) => {\n        var _a;\n        if (state.status === 'idle') {\n            dispatch({ type: 'cartAttributesUpdate' });\n            onAttributesUpdate === null || onAttributesUpdate === void 0 ? void 0 : onAttributesUpdate();\n            const { data, error } = await fetchCart({\n                query: CartAttributesUpdate,\n                variables: {\n                    cartId: state.cart.id,\n                    attributes,\n                    numCartLines,\n                    country: countryCode,\n                },\n            });\n            if (error) {\n                dispatch({\n                    type: 'reject',\n                    error,\n                });\n            }\n            if ((_a = data === null || data === void 0 ? void 0 : data.cartAttributesUpdate) === null || _a === void 0 ? void 0 : _a.cart) {\n                dispatch({\n                    type: 'resolve',\n                    cart: cartFromGraphQL(data.cartAttributesUpdate.cart),\n                });\n            }\n        }\n    }, [fetchCart, onAttributesUpdate, numCartLines, countryCode]);\n    const discountCodesUpdate = useCallback(async (discountCodes, state) => {\n        var _a;\n        if (state.status === 'idle') {\n            dispatch({ type: 'discountCodesUpdate' });\n            onDiscountCodesUpdate === null || onDiscountCodesUpdate === void 0 ? void 0 : onDiscountCodesUpdate();\n            const { data, error } = await fetchCart({\n                query: CartDiscountCodesUpdate,\n                variables: {\n                    cartId: state.cart.id,\n                    discountCodes,\n                    numCartLines,\n                    country: countryCode,\n                },\n            });\n            if (error) {\n                dispatch({\n                    type: 'reject',\n                    error,\n                });\n            }\n            if ((_a = data === null || data === void 0 ? void 0 : data.cartDiscountCodesUpdate) === null || _a === void 0 ? void 0 : _a.cart) {\n                ClientAnalytics.publish(ClientAnalytics.eventNames.DISCOUNT_CODE_UPDATED, true, {\n                    updatedDiscountCodes: discountCodes,\n                    cart: data.cartDiscountCodesUpdate.cart,\n                });\n                dispatch({\n                    type: 'resolve',\n                    cart: cartFromGraphQL(data.cartDiscountCodesUpdate.cart),\n                });\n            }\n        }\n    }, [fetchCart, onDiscountCodesUpdate, numCartLines, countryCode]);\n    const didFetchCart = useRef(false);\n    useEffect(() => {\n        if (localStorage.getItem(CART_ID_STORAGE_KEY) &&\n            state.status === 'uninitialized' &&\n            !didFetchCart.current) {\n            didFetchCart.current = true;\n            cartFetch(localStorage.getItem(CART_ID_STORAGE_KEY));\n        }\n    }, [cartFetch, state]);\n    useEffect(() => {\n        if (state.status !== 'idle') {\n            return;\n        }\n        buyerIdentityUpdate({ countryCode }, state);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [countryCode]);\n    const cartContextValue = useMemo(() => {\n        return {\n            ...('cart' in state\n                ? state.cart\n                : {\n                    lines: [],\n                    attributes: [],\n                    ...(cart ? cartFromGraphQL(cart) : {}),\n                }),\n            status: state.status,\n            error: 'error' in state ? state.error : undefined,\n            totalQuantity: 'cart' in state\n                ? state.cart.lines.reduce((previous, current) => {\n                    return previous + current.quantity;\n                }, 0)\n                : 0,\n            cartCreate,\n            linesAdd(lines) {\n                if ('cart' in state && state.cart.id) {\n                    addLineItem(lines, state);\n                }\n                else {\n                    cartCreate({ lines });\n                }\n            },\n            linesRemove(lines) {\n                removeLineItem(lines, state);\n            },\n            linesUpdate(lines) {\n                updateLineItem(lines, state);\n            },\n            noteUpdate(note) {\n                noteUpdate(note, state);\n            },\n            buyerIdentityUpdate(buyerIdentity) {\n                buyerIdentityUpdate(buyerIdentity, state);\n            },\n            cartAttributesUpdate(attributes) {\n                cartAttributesUpdate(attributes, state);\n            },\n            discountCodesUpdate(discountCodes) {\n                discountCodesUpdate(discountCodes, state);\n            },\n        };\n    }, [\n        state,\n        cart,\n        cartCreate,\n        addLineItem,\n        removeLineItem,\n        updateLineItem,\n        noteUpdate,\n        buyerIdentityUpdate,\n        cartAttributesUpdate,\n        discountCodesUpdate,\n    ]);\n    return (React.createElement(CartContext.Provider, { value: cartContextValue }, children));\n}\nfunction cartFromGraphQL(cart) {\n    var _a;\n    return {\n        ...cart,\n        // @ts-expect-error While the cart still uses fragments, there will be a TS error here until we remove those fragments and get the type in-line\n        lines: flattenConnection(cart.lines),\n        note: (_a = cart.note) !== null && _a !== void 0 ? _a : undefined,\n    };\n}\n"],"names":["state","action","type","status","resolvableStatuses","includes","cart","error","lastValidCart","lines","filter","id","map","line","updatedLine","find","quantity","Error","children","numCartLines","onCreate","onLineAdd","onLineRemove","onLineUpdate","onNoteUpdate","onBuyerIdentityUpdate","onAttributesUpdate","onDiscountCodesUpdate","data","_a","serverProps","useServerProps","countryCode","country","isoCode","initialStatus","cartFromGraphQL","dispatch","useReducer","cartReducer","fetchCart","useCartFetch","cartFetch","useCallback","cartId","query","CartQuery","variables","window","localStorage","removeItem","CART_ID_STORAGE_KEY","cartCreate","_b","buyerIdentity","CartCreate","input","ClientAnalytics","publish","eventNames","ADD_TO_CART","addedCartLines","setItem","addLineItem","CartLineAdd","cartLinesAdd","removeLineItem","CartLineRemove","cartLinesRemove","REMOVE_FROM_CART","removedCartLines","updateLineItem","CartLineUpdate","cartLinesUpdate","UPDATE_CART","updatedCartLines","oldCart","noteUpdate","note","CartNoteUpdate","cartNoteUpdate","buyerIdentityUpdate","CartBuyerIdentityUpdate","cartBuyerIdentityUpdate","cartAttributesUpdate","attributes","CartAttributesUpdate","discountCodesUpdate","discountCodes","CartDiscountCodesUpdate","cartDiscountCodesUpdate","DISCOUNT_CODE_UPDATED","updatedDiscountCodes","didFetchCart","useRef","useEffect","getItem","current","cartContextValue","useMemo","undefined","totalQuantity","reduce","previous","linesAdd","linesRemove","linesUpdate","_jsx","flattenConnection"],"mappings":"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"}